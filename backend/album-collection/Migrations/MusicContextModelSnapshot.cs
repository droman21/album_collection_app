// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using album_collection;

namespace album_collection.Migrations
{
    [DbContext(typeof(MusicContext))]
    partial class MusicContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("album_collection.Models.Album", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtistID")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ArtistID");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ArtistID = 1,
                            Image = "HotelDiablo.jpg",
                            Label = "Bad Boy Records",
                            Title = "Hotel Diablo"
                        },
                        new
                        {
                            ID = 2,
                            ArtistID = 2,
                            Image = "EatOrGetAte.jpg",
                            Label = "Paper Route Empire",
                            Title = "Eat or Get Ate"
                        },
                        new
                        {
                            ID = 3,
                            ArtistID = 3,
                            Image = "SunsTirade.jpg",
                            Label = "Top Dawg Entertainment",
                            Title = "The Sun's Tirade"
                        },
                        new
                        {
                            ID = 4,
                            ArtistID = 4,
                            Image = "Lemonade.jpg",
                            Label = "Parkwood",
                            Title = "Lemonade"
                        },
                        new
                        {
                            ID = 5,
                            ArtistID = 5,
                            Image = "DontSmileAtMe.jpg",
                            Label = "Interscope Records",
                            Title = "Don't Smile At Me"
                        },
                        new
                        {
                            ID = 6,
                            ArtistID = 5,
                            Image = "wwafawdwg.jpg",
                            Label = "Interscope Records",
                            Title = "When We All Fall Aleep, Where Do We Go?"
                        },
                        new
                        {
                            ID = 7,
                            ArtistID = 6,
                            Image = "Views.jpg",
                            Label = "OVO Sound",
                            Title = "Views"
                        },
                        new
                        {
                            ID = 8,
                            ArtistID = 6,
                            Image = "iyrtitl.jpg",
                            Label = "OVO Sound",
                            Title = "If You're Reading This It's Too Late"
                        },
                        new
                        {
                            ID = 9,
                            ArtistID = 6,
                            Image = "Scorpion.jpg",
                            Label = "OVO Sound",
                            Title = "Scorpion"
                        },
                        new
                        {
                            ID = 10,
                            ArtistID = 3,
                            Image = "CilviaDemo.jpg",
                            Label = "Top Dawg Entertainment",
                            Title = "Cilvia Demo"
                        });
                });

            modelBuilder.Entity("album_collection.Models.Artist", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ArtistName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeTown")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordLabel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Age = 30,
                            ArtistName = "Machine Gun Kelly",
                            HomeTown = "Cleveland, OH",
                            Image = "MGK.jpg",
                            RecordLabel = "Bad Boy Records"
                        },
                        new
                        {
                            ID = 2,
                            Age = 29,
                            ArtistName = "Big Moochie Grape",
                            HomeTown = "Memphis, TN",
                            Image = "BigMoochie.jpg",
                            RecordLabel = "Paper Route EMPIRE"
                        },
                        new
                        {
                            ID = 3,
                            Age = 29,
                            ArtistName = "Isaiah Rashad",
                            HomeTown = "Chattanooga, TN",
                            Image = "IsaiahRashad.jpg",
                            RecordLabel = "Top Dawg Entertainment"
                        },
                        new
                        {
                            ID = 4,
                            Age = 38,
                            ArtistName = "Beyonce",
                            HomeTown = "Houston, TX",
                            Image = "Beyonce.jpg",
                            RecordLabel = "Parkwood"
                        },
                        new
                        {
                            ID = 5,
                            Age = 18,
                            ArtistName = "Billie Eilish",
                            HomeTown = "Los Angeles, CA",
                            Image = "BillieEilish.jpg",
                            RecordLabel = "Interscope Records"
                        },
                        new
                        {
                            ID = 6,
                            Age = 33,
                            ArtistName = "Drake",
                            HomeTown = "Toronto, Canada",
                            Image = "Drake.jpg",
                            RecordLabel = "OVO Sound"
                        });
                });

            modelBuilder.Entity("album_collection.Models.Song", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlbumID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SongDuration")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AlbumID");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AlbumID = 1,
                            Name = "Death in my pocket",
                            SongDuration = "2:37"
                        },
                        new
                        {
                            ID = 2,
                            AlbumID = 1,
                            Name = "Super Song",
                            SongDuration = "4:34"
                        },
                        new
                        {
                            ID = 3,
                            AlbumID = 2,
                            Name = "Clusters",
                            SongDuration = "5:34"
                        },
                        new
                        {
                            ID = 4,
                            AlbumID = 2,
                            Name = "Super Song",
                            SongDuration = "1:34"
                        },
                        new
                        {
                            ID = 5,
                            AlbumID = 3,
                            Name = "Free Lunch",
                            SongDuration = "6:34"
                        },
                        new
                        {
                            ID = 6,
                            AlbumID = 3,
                            Name = "Super Song",
                            SongDuration = "3:34"
                        },
                        new
                        {
                            ID = 7,
                            AlbumID = 4,
                            Name = "Hold Up",
                            SongDuration = "5:37"
                        },
                        new
                        {
                            ID = 8,
                            AlbumID = 4,
                            Name = "Super Song",
                            SongDuration = "4:24"
                        },
                        new
                        {
                            ID = 9,
                            AlbumID = 5,
                            Name = "My Boy",
                            SongDuration = "4:34"
                        },
                        new
                        {
                            ID = 10,
                            AlbumID = 5,
                            Name = "Super Song",
                            SongDuration = "4:34"
                        },
                        new
                        {
                            ID = 11,
                            AlbumID = 6,
                            Name = "Bad Guy",
                            SongDuration = "4:34"
                        },
                        new
                        {
                            ID = 12,
                            AlbumID = 6,
                            Name = "Super Song",
                            SongDuration = "4:34"
                        },
                        new
                        {
                            ID = 13,
                            AlbumID = 7,
                            Name = "Hype",
                            SongDuration = "4:34"
                        },
                        new
                        {
                            ID = 14,
                            AlbumID = 7,
                            Name = "Super Song",
                            SongDuration = "4:34"
                        },
                        new
                        {
                            ID = 15,
                            AlbumID = 8,
                            Name = "Legend",
                            SongDuration = "4:34"
                        },
                        new
                        {
                            ID = 16,
                            AlbumID = 8,
                            Name = "Super Song",
                            SongDuration = "4:34"
                        },
                        new
                        {
                            ID = 17,
                            AlbumID = 9,
                            Name = "Holiday",
                            SongDuration = "4:34"
                        },
                        new
                        {
                            ID = 18,
                            AlbumID = 9,
                            Name = "Super Song",
                            SongDuration = "4:34"
                        },
                        new
                        {
                            ID = 19,
                            AlbumID = 10,
                            Name = "West Savannah",
                            SongDuration = "4:34"
                        },
                        new
                        {
                            ID = 20,
                            AlbumID = 10,
                            Name = "Super Song",
                            SongDuration = "4:34"
                        });
                });

            modelBuilder.Entity("album_collection.Models.Album", b =>
                {
                    b.HasOne("album_collection.Models.Artist", "artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("album_collection.Models.Song", b =>
                {
                    b.HasOne("album_collection.Models.Album", "album")
                        .WithMany("songs")
                        .HasForeignKey("AlbumID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
